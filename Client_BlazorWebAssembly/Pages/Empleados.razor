@page "/empleados"

@using Shared_ClassLibrary;
@using CurrieTechnologies.Razor.SweetAlert2;
@using Client_BlazorWebAssembly.Services;

@inject SweetAlertService sas;
@inject IEmpleadoService empleadoService;

<h3>Empleados</h3>

<a class="btn btn-success btn-sm mb-3" href="empleado">Nuevo Empleado</a>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Sueldo</th>
            <th>Contrato</th>
            <th>Departamento</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (listaEmpleado == null)
        {
            <tr>
                <td colspan="5" align="center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only"></span>
                    </div>
                </td>
            </tr>
        }
        else 
        {
            @foreach (var item in listaEmpleado)
            {
                <tr>
                    <td>@item.Nombre</td>
                    <td>@item.Sueldo</td>
                    <td>@item.FechaContrato.ToString("dd/MM/yyyy")</td>
                    <td>@item.Departamento!.Nombre</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="empleado/@item.Id">
                            <i class="bi bi-pencil-fill"></i>
                        </a>
                        <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => Eliminar(item.Id))">
                            <i class="bi bi-trash3-fill"></i>
                        </button>
                    </td> 
                </tr>
            }
        }
    </tbody>
</table>

@code {
    List<EmpleadoDTO>? listaEmpleado = null;

    protected override async Task OnInitializedAsync()
    {
        listaEmpleado = await empleadoService.GetAll();
    }

    private async Task Eliminar(int id)
    {
        var resultado = await sas.FireAsync(new SweetAlertOptions
        {
            Title = "Eliminar Empleado",
            Text = "Deseas Eliminar el Empleado?",
            Icon = SweetAlertIcon.Question,
            ShowCancelButton = true,
        });


        if (resultado.IsConfirmed)
        {
            var eliminado = await empleadoService.Delete(id);

            if (eliminado)
            {
                // listaEmpleado = listaEmpleado.FindAll(e => e.Id != id);
                listaEmpleado = await empleadoService.GetAll();
            }
        }
    }
}
